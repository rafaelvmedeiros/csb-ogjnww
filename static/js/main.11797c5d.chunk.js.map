{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","_useState","useState","productCost","shippingCost","transactionFee","fixedCosts","sellingPrice","numberSold","productExpenses","shippingExpenses","transactionExpenses","totalExpenses","revenue","profit","_useState2","_slicedToArray","initialState","setState","updateCalculator","event","_objectSpread2","preventDefault","Math","ceil","_objectSpread","_defineProperty","target","name","value","_jsx","className","children","_jsxs","type","onChange","minLength","maxLength","rootElement","document","getElementById","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.11797c5d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [initialState, setState] = useState({\n    productCost: 58,\n    shippingCost: 5,\n    transactionFee: 0.03,\n    fixedCosts: 100,\n    sellingPrice: 75,\n    numberSold: 10,\n    productExpenses: 0,\n    shippingExpenses: 0,\n    transactionExpenses: 0,\n    totalExpenses: 0,\n    revenue: 0,\n    profit: 0\n  });\n\n  function updateCalculator(event: any) {\n    event.preventDefault();\n\n    const productExpenses = initialState.productCost * initialState.numberSold;\n    const shippingExpenses =\n      initialState.shippingCost * initialState.numberSold;\n\n    const transactionExpenses = Math.ceil(\n      initialState.sellingPrice *\n        initialState.numberSold *\n        initialState.transactionFee\n    );\n\n    const totalExpenses = Math.ceil(\n      productExpenses +\n        shippingExpenses +\n        transactionExpenses +\n        initialState.fixedCosts\n    );\n\n    const revenue = initialState.sellingPrice * initialState.numberSold;\n    const profit = Math.ceil(revenue - totalExpenses);\n\n    setState({\n      ...initialState,\n      [event.target.name]: event.target.value,\n      productExpenses,\n      shippingExpenses,\n      transactionExpenses,\n      totalExpenses,\n      revenue,\n      profit\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"content\">\n        <div className=\"table-input\">\n          <table>\n            <tr>\n              <th>Product Cost</th>\n              <th>Shipping Cost</th>\n              <th>Transaction Fee</th>\n              <th>Fixed Costs</th>\n              <th>Selling Price</th>\n              <th>Number Sold</th>\n            </tr>\n            <tr>\n              <td>\n                <input\n                  type=\"number\"\n                  name=\"productCost\"\n                  value={initialState.productCost}\n                  onChange={updateCalculator}\n                  minLength={0}\n                  maxLength={100000000}\n                />\n              </td>\n              <td>\n                <input\n                  type=\"number\"\n                  name=\"shippingCost\"\n                  value={initialState.shippingCost}\n                  onChange={updateCalculator}\n                  minLength={0}\n                  maxLength={100000000}\n                />\n              </td>\n              <td>\n                <input\n                  type=\"number\"\n                  name=\"transactionFee\"\n                  value={initialState.transactionFee}\n                  onChange={updateCalculator}\n                  minLength={0}\n                  maxLength={100000000}\n                />\n              </td>\n              <td>\n                <input\n                  type=\"number\"\n                  name=\"fixedCosts\"\n                  value={initialState.fixedCosts}\n                  onChange={updateCalculator}\n                  minLength={0}\n                  maxLength={100000000}\n                />\n              </td>\n              <td>\n                <input\n                  type=\"number\"\n                  name=\"sellingPrice\"\n                  value={initialState.sellingPrice}\n                  onChange={updateCalculator}\n                  minLength={0}\n                  maxLength={100000000}\n                />\n              </td>\n              <td>\n                <input\n                  type=\"number\"\n                  name=\"numberSold\"\n                  value={initialState.numberSold}\n                  onChange={updateCalculator}\n                  minLength={0}\n                  maxLength={100000000}\n                />\n              </td>\n            </tr>\n          </table>\n        </div>\n        <div className=\"table\">\n          <table>\n            <tr>\n              <th>Product Expenses</th>\n              <th>Shipping Expenses</th>\n              <th>Transaction Expenses</th>\n              <th>Total Expenses</th>\n              <th>Revenue</th>\n              <th>Profit</th>\n            </tr>\n            <tr>\n              <td>{initialState.productExpenses}</td>\n              <td>{initialState.shippingExpenses}</td>\n              <td>{initialState.transactionExpenses}</td>\n              <td>{initialState.totalExpenses}</td>\n              <td>{initialState.revenue}</td>\n              <td>{initialState.profit}</td>\n            </tr>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement!);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}